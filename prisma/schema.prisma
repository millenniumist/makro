generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Order {
  id             Int             @id @default(autoincrement())
  total          Decimal
  is_paid        Boolean
  created_at     DateTime        @default(now())
  updated_at     DateTime        @updatedAt
  status         OrderStatus
  payment_method PaymentMethod
  userId         Int
  Order_Product  Order_Product[]

  @@index([userId], map: "Order_userId_fkey")
}

model Order_Product {
  id        Int   @id @default(autoincrement())
  quantity  Int
  orderId   Int
  productId Int
  Order     Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([orderId], map: "Order_Product_orderId_fkey")
}

model Product_Image {
  id        Int    @id @default(autoincrement())
  url       String
  productId Int 

  @@index([productId], map: "Product_Image_productId_fkey")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Address {
  id           Int     @id @default(autoincrement())
  name         String
  phone        String
  email        String
  address      String
  sub_district String?
  district     String
  provice      String
  postal       String
  is_main      Boolean @default(false)
  userId       Int     @unique(map: "Address_userId_key")
}

model Product {
  id         Int     @id @default(autoincrement())
  categoryId Int
  name       String
  price      Decimal
  stock      Int
  detail     String?
  length     String?
  width      String?
  height     String?
  weight     String?
  Order_Product Order_Product[]  

  @@index([categoryId], map: "Product_categoryId_fkey")
}

model User {
  id         Int     @id @default(autoincrement())
  first_name String
  last_name  String
  email      String  @unique(map: "User_email_key")
  phone      String  @unique(map: "User_phone_key")
  member_id  String?
  password   String
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentMethod {
  COD
  BANK_TRANSFER
  CREDIT_CARD
}
