// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  password  String
  first_name String
  last_name  String
  email     String @unique
  phone     String @unique
  member_id String?
  Order     Order[]
  Address   Address?
}

model Address {
  id        Int     @id @default(autoincrement())
  userId    Int     @unique
  name      String
  phone     String
  email     String
  address   String
  sub_district String?
  district  String
  provice   String
  postal    String
  is_main   Boolean @default(false)
  User      User    @relation(fields: [userId], references: [id])
}

model Order {
  id              Int              @id @default(autoincrement())
  userId          Int
  total           Decimal
  is_paid         Boolean
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
  status          OrderStatus
  payment_method PaymentMethod
  User            User             @relation(fields: [userId], references: [id])
  Order_Product   Order_Product[]
}

model Product {
  id          Int              @id @default(autoincrement())
  categoryId  Int
  name        String
  price       Decimal
  stock       Int
  detail      String?
  length      String?
  width       String?
  height      String?
  weight      String?
  Order_Product Order_Product[]
  Category    Category         @relation(fields: [categoryId], references: [id])
  Product_Image Product_Image[]
}

model Order_Product {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  Order     Order   @relation(fields: [orderId], references: [id])
  Product   Product  @relation(fields: [productId], references: [id])
}

model Product_Image {
  id        Int     @id @default(autoincrement())
  productId Int
  url       String
  Product   Product  @relation(fields: [productId], references: [id])
}

model Category {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  Product   Product[]
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentMethod {
  COD
  BANK_TRANSFER
  CREDIT_CARD
}
